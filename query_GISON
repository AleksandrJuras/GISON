CREATE TABLE surowce (
	id integer GENERATED BY DEFAULT AS IDENTITY (START WITH 5) NOT NULL PRIMARY KEY,
	id_surowca INT NOT NULL,
	rok INT NOT NULL,
	miesiac INT NOT NULL,
	cena_srednia DOUBLE PRECISION	
);

DROP TABLE surowce
TRUNCATE TABLE surowce
SELECT * FROM surowce

INSERT INTO surowce (id_surowca, rok, miesiac, cena_srednia) VALUES
(1, 2017, 9, 0.90),
(2, 2017, 2, 2.40),
(2, 2017, 4, 2.00),
(3, 2017, 3, 3.50),
(3, 2017, 9, 1.66),
(3, 2017, 12, 0.22),
(1, 2018, 3, 4.50),
(1, 2018, 6, 2.12),
(5, 2016, 3, 2.22),
(4, 2017, 8, 5.34),
(4, 2017, 5, 6.66),
(4, 2016, 11, 3.45)

INSERT INTO surowce (id_surowca, rok, miesiac, cena_srednia) VALUES
(222, 5, 12, 3.46)

	
-- select * from (
--   SELECT *,
--   ROW_NUMBER() OVER(PARTITION BY id_surowca ORDER BY id asc) AS Row
--   FROM surowce
-- ) dups
-- where 
-- dups.Row > 1


-- czy wpis dotyczący ceny nie jest powielony
IF NOT EXISTS ( SELECT 1 FROM surowce WHERE id_surowca = 1 AND cena_srednia = 3.44 )
BEGIN
    INSERT INTO surowce (id_surowca, rok, miesiac, cena_srednia) VALUES (1, 2, 3, 3.44)
END

INSERT INTO surowce (id_surowca, rok, miesiac, cena_srednia) SELECT 1, 2, 3, 3.44
WHERE NOT EXISTS (SELECT cena_srednia FROM surowce WHERE cena_srednia = 3.44)

-- indeks zabezpieczający powielenie
CREATE UNIQUE INDEX CONCURRENTLY surowce_unique
ON surowce (id_surowca, rok, miesiac, cena_srednia);
--DROP INDEX surowce_unique
